# Generated by Django 2.2 on 2021-02-01 11:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pipelines', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=25)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('staff', models.CharField(blank=True, max_length=128, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('measurement_day', models.DateField(blank=True, null=True)),
                ('rawdata_file', models.FileField(upload_to='assays/xlsx/')),
                ('assayqc', models.CharField(blank=True, db_column='assayQC', max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(db_column='author', default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_by_user', to=settings.AUTH_USER_MODEL)),
                ('pipeline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assays', to='pipelines.Pipeline')),
                ('scientist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scientists', related_query_name='scientist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mid', models.CharField(max_length=128, unique=True)),
                ('strain', models.CharField(blank=True, max_length=128, null=True)),
                ('tail_num', models.IntegerField(blank=True, null=True)),
                ('genotype', models.CharField(blank=True, max_length=128, null=True)),
                ('induced', models.CharField(blank=True, max_length=32, null=True)),
                ('treated', models.CharField(blank=True, max_length=32, null=True)),
                ('gender', models.CharField(blank=True, max_length=16, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('dateofBirth', models.DateField(blank=True, null=True)),
                ('diet', models.TextField(blank=True, null=True)),
                ('mouse_info', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ni02Rot01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('individual_latency_fall1', models.FloatField(blank=True, null=True)),
                ('individual_latency_fall2', models.FloatField(blank=True, null=True)),
                ('mean_latency_fall', models.FloatField(blank=True, null=True)),
                ('speed_fall1', models.FloatField(blank=True, null=True)),
                ('speed_fall2', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ni02rot01s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'NI-02-ROT-01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ni02ofd01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('total_distance_wa', models.FloatField(blank=True, null=True)),
                ('total_distance_cz', models.FloatField(blank=True, null=True)),
                ('total_distance_pz', models.FloatField(blank=True, null=True)),
                ('total_rears', models.FloatField(blank=True, null=True)),
                ('rears_cz', models.FloatField(blank=True, null=True)),
                ('rears_pz', models.FloatField(blank=True, null=True)),
                ('time_cz', models.FloatField(blank=True, null=True)),
                ('time_pz', models.FloatField(blank=True, null=True)),
                ('duration_immobility_wa', models.FloatField(blank=True, null=True)),
                ('duration_immobility_cz', models.FloatField(blank=True, null=True)),
                ('duration_immobility_pz', models.FloatField(blank=True, null=True)),
                ('avg_speed_wa', models.FloatField(blank=True, null=True)),
                ('avg_speed_cz', models.FloatField(blank=True, null=True)),
                ('avg_speed_pz', models.FloatField(blank=True, null=True)),
                ('num_entries_cz', models.FloatField(blank=True, null=True)),
                ('latency1_cz', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ni02ofd01s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'NI-02-OFD-01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ni02grs01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('forelimb_r1', models.FloatField(blank=True, null=True)),
                ('forelimb_r2', models.FloatField(blank=True, null=True)),
                ('forelimb_r3', models.FloatField(blank=True, null=True)),
                ('hindlimb_r1', models.FloatField(blank=True, null=True)),
                ('hindlimb_r2', models.FloatField(blank=True, null=True)),
                ('hindlimb_r3', models.FloatField(blank=True, null=True)),
                ('forelimb', models.FloatField(blank=True, null=True)),
                ('hindlimb', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('forelimb_mean_ratio', models.FloatField(blank=True, null=True)),
                ('hindlimb_mean_ratio', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ni02grs01s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'NI-02-GRS-01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ni01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('clinical_score', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ni01s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'NI-01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Iinflc04',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iinflc04s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'IINFLC-04',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Iinflc03',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sum_intensity', models.FloatField(blank=True, null=True)),
                ('net_intensity', models.FloatField(blank=True, null=True)),
                ('mean_intensity', models.FloatField(blank=True, null=True)),
                ('acquisition_settings', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iinflc03s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'IINFLC-03',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Iinflc02',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=256, null=True)),
                ('cell_count_s_intestine', models.FloatField(blank=True, null=True)),
                ('cell_count_l_intestine', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iinflc02s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'IINFLC-02',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hpibd02',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('inflammation_small', models.FloatField(blank=True, null=True)),
                ('epithelial_small', models.FloatField(blank=True, null=True)),
                ('inflammation_large', models.FloatField(blank=True, null=True)),
                ('epithelial_large', models.FloatField(blank=True, null=True)),
                ('vc_ratio', models.FloatField(blank=True, null=True)),
                ('colon_length', models.FloatField(blank=True, null=True)),
                ('epithelium_s_flattening', models.FloatField(blank=True, null=True)),
                ('apoptotic_s_field', models.FloatField(blank=True, null=True)),
                ('goblet_s_depletion', models.FloatField(blank=True, null=True)),
                ('lumen_s_exfoliation', models.FloatField(blank=True, null=True)),
                ('villus_s_short', models.FloatField(blank=True, null=True)),
                ('igd_small', models.FloatField(blank=True, null=True)),
                ('paneth_s_activation', models.FloatField(blank=True, null=True)),
                ('peyer_s_patch', models.FloatField(blank=True, null=True)),
                ('apoptotic_l_field', models.FloatField(blank=True, null=True)),
                ('goblet_l_depletion', models.FloatField(blank=True, null=True)),
                ('lumen_l_exfoliation', models.FloatField(blank=True, null=True)),
                ('crypt_l_damage', models.FloatField(blank=True, null=True)),
                ('endothelial_l_activation', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hpibd02s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'HPIBD-02',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hem01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_id', models.CharField(blank=True, max_length=128, null=True)),
                ('wbc_count', models.FloatField(blank=True, null=True)),
                ('mononuclear_num', models.FloatField(blank=True, null=True)),
                ('lymphocytes_num', models.FloatField(blank=True, null=True)),
                ('lymphocytes_per', models.FloatField(blank=True, null=True)),
                ('monocytes_num', models.FloatField(blank=True, null=True)),
                ('monocytes2_num', models.FloatField(blank=True, null=True)),
                ('neutrophils_num', models.FloatField(blank=True, null=True)),
                ('neutrophils_per', models.FloatField(blank=True, null=True)),
                ('eosinophils_num', models.FloatField(blank=True, null=True)),
                ('eosinophils_per', models.FloatField(blank=True, null=True)),
                ('basophils_num', models.FloatField(blank=True, null=True)),
                ('basophils_per', models.FloatField(blank=True, null=True)),
                ('rbc_count', models.FloatField(blank=True, null=True)),
                ('ht', models.FloatField(blank=True, null=True)),
                ('hb', models.FloatField(blank=True, null=True)),
                ('plt_count', models.FloatField(blank=True, null=True)),
                ('platelet_dist_range', models.FloatField(blank=True, null=True)),
                ('platelet_count', models.FloatField(blank=True, null=True)),
                ('avg_vol_platelets', models.FloatField(blank=True, null=True)),
                ('mcv', models.FloatField(blank=True, null=True)),
                ('rdv', models.FloatField(blank=True, null=True)),
                ('mchc', models.FloatField(blank=True, null=True)),
                ('mcv2', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hem01s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'HEM-01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fc04',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('live_aquis', models.CharField(blank=True, max_length=64, null=True)),
                ('total_cell_count', models.FloatField(blank=True, null=True)),
                ('all_cells_per', models.FloatField(blank=True, null=True)),
                ('live_cells_per', models.FloatField(blank=True, null=True)),
                ('early_apoptotic_per', models.FloatField(blank=True, null=True)),
                ('late_apoptotic_per', models.FloatField(blank=True, null=True)),
                ('necrotic_per', models.FloatField(blank=True, null=True)),
                ('all_cells_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('live_cells_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('early_apoptotic_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('late_apoptotic_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('necrotic_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('total_leukocytes_per', models.FloatField(blank=True, null=True)),
                ('apoptotic_leukocytes_per', models.FloatField(blank=True, null=True)),
                ('necrotic_leukocytes_per', models.FloatField(blank=True, null=True)),
                ('live_leukocytes_per', models.FloatField(blank=True, null=True)),
                ('total_epithelial_per', models.FloatField(blank=True, null=True)),
                ('apoptotic_epithelial_per', models.FloatField(blank=True, null=True)),
                ('necrotic_epithelial_per', models.FloatField(blank=True, null=True)),
                ('live_epithelial_per', models.FloatField(blank=True, null=True)),
                ('total_leukocytes_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('apoptotic_leukocytes_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('necrotic_leukocytes_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('live_leukocytes_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('total_epithelial_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('apoptotic_epithelial_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('necrotic_epithelial_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('live_epithelial_num', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fc04s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'FC-04',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem08',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('ldl', models.FloatField(blank=True, null=True)),
                ('creatinine_kinase', models.FloatField(blank=True, null=True)),
                ('potassium', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem08s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-08',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem07',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('iron', models.FloatField(blank=True, null=True)),
                ('uibc', models.FloatField(blank=True, null=True)),
                ('ferritin', models.FloatField(blank=True, null=True)),
                ('transferrin', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem07s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-07',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem06',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('cholesterol', models.FloatField(blank=True, null=True)),
                ('hdl_cholesterol', models.FloatField(blank=True, null=True)),
                ('ldl_cholesterol', models.FloatField(blank=True, null=True)),
                ('triglycerides', models.FloatField(blank=True, null=True)),
                ('nefa', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem06s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-06',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem05',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('amylase', models.FloatField(blank=True, null=True)),
                ('lipase', models.FloatField(blank=True, null=True)),
                ('glucose', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem05s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-05',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem04',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('urea', models.FloatField(blank=True, null=True)),
                ('uric_acid', models.FloatField(blank=True, null=True)),
                ('creatinine', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem04s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-04',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem03',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('alt', models.FloatField(blank=True, null=True)),
                ('ast', models.FloatField(blank=True, null=True)),
                ('alp', models.FloatField(blank=True, null=True)),
                ('total_bilirubin', models.FloatField(blank=True, null=True)),
                ('direct_bilirubin', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem03s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-03',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem02',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sodium', models.FloatField(blank=True, null=True)),
                ('potassium', models.FloatField(blank=True, null=True)),
                ('chloride', models.FloatField(blank=True, null=True)),
                ('phosphorus', models.FloatField(blank=True, null=True)),
                ('calcium', models.FloatField(blank=True, null=True)),
                ('magnesium', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem02s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-02',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Biochem01',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('sample_source', models.CharField(blank=True, max_length=64, null=True)),
                ('total_protein', models.FloatField(blank=True, null=True)),
                ('albumin', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assayid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochem01s', to='assays.Assay')),
                ('mid', models.ForeignKey(db_column='mid', on_delete=django.db.models.deletion.CASCADE, to='assays.Mouse')),
            ],
            options={
                'db_table': 'BIOCHEM-01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Atype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('facility', models.CharField(blank=True, max_length=16, null=True)),
                ('unit', models.CharField(blank=True, max_length=32, null=True)),
                ('staff', models.CharField(blank=True, max_length=256, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('assay_word', models.FileField(blank=True, upload_to='assays/types/<django.db.models.fields.CharField>/')),
                ('purpose', models.TextField(blank=True, null=True)),
                ('experimental_design', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('supplies', models.TextField(blank=True, null=True)),
                ('procedures', models.TextField(blank=True, null=True)),
                ('troubleshooting', models.TextField(blank=True, null=True)),
                ('appendix', models.TextField(blank=True, null=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facilitylong', models.ForeignKey(db_column='facilitylong', on_delete=django.db.models.deletion.DO_NOTHING, to='assays.Facility')),
            ],
        ),
        migrations.AddField(
            model_name='assay',
            name='type',
            field=models.ForeignKey(db_column='type', on_delete=django.db.models.deletion.DO_NOTHING, to='assays.Atype'),
        ),
        migrations.AddField(
            model_name='assay',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_by_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
